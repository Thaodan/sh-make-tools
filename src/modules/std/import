#!/bin/sh
# description:
#  macro that adds import function to load the file or include in static mode
# syntax: #\\import [options]  <file>
# vars:
# import/mode: set import mode 
# arguments:
#  --mode <mode>: set import modes (see below), overwrides mode var
# import modes:
#  POSIX_SHELL: use posix shell .  to load file
#  SHLOAD: use libsh shload to load file
#  IMPORT: usene libsh import to load file (see libsh for more info)
#  SOURCE|BASH|ZSH: use bash's or zsh's source to load file
# ver: 0.1
# example:
# #\\macro std/import
# #\\import ---mode BASH test_file
##
#

import() {
    local __import_file __import_link_mode pullobjs
    while [ ! $# 0 ] ; do
	case $1 in
	    --mode) __import_link_mode =$2; shift 2;;
	    -*) shift ;;
	    *) __import_obj=$@; shift $#;;
	esac
    done
    if [ -e self/from ] ; then
	pullobjs=$__import_obj
	__import_obj=$(var self/from)
    fi
    if [  $( defined STATIC ) = 0 ] ; then
	mkdir -p self/import/file
	if [ -z $__import_link_mode ] ; then
	    if ! __import_link_mode=$(var import/mode) ; then 
		error "import: wrong or no import link mode"  
	    fi
	fi
	case ${__import_linkmode:-POSIX_SHELL} in
	    POSIX_SHELL) echo ". $__import_obj" > \
"$tmp_dir/import_$__import_obj";;
	    SHLOAD) echo "shload $__import_obj" > \
"$tmp_dir/import_$__import_obj";;
	    IMPORT) echo "import $__import_obj"> \
"$tmp_dir/import_$__import_obj";;
	    SOURCE|BASH|ZSH) echo "source $__import_obj" > \
"$tmp_dir/import_$__import_obj";;
	esac
	__import_obj="$tmp_dir/self/import/file/import_$__import_obj"
    else
	if [ -e self/from ] ; then

	fi
    fi
    include noparse "$__import_obj"
 
}


register_external --command import
